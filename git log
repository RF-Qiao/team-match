[33mcommit 89edc9682909896200967d6bb2167059c3f72ab9[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Merge: d3c907f c5200aa
Author: fengfeng <1328678738@qq.com>
Date:   Sat Jan 14 18:12:50 2023 +0800

    springboot_usermanage

[1mdiff --cc .gitignore[m
[1mindex 549e00a,a1c2a23..0ef6ec8[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@@ -1,33 -1,23 +1,59 @@@[m
[32m++<<<<<<< HEAD[m
[32m +HELP.md[m
[32m +target/[m
[32m +!.mvn/wrapper/maven-wrapper.jar[m
[32m +!**/src/main/**/target/[m
[32m +!**/src/test/**/target/[m
[32m +[m
[32m +### STS ###[m
[32m +.apt_generated[m
[32m +.classpath[m
[32m +.factorypath[m
[32m +.project[m
[32m +.settings[m
[32m +.springBeans[m
[32m +.sts4-cache[m
[32m +[m
[32m +### IntelliJ IDEA ###[m
[32m +.idea[m
[32m +*.iws[m
[32m +*.iml[m
[32m +*.ipr[m
[32m +[m
[32m +### NetBeans ###[m
[32m +/nbproject/private/[m
[32m +/nbbuild/[m
[32m +/dist/[m
[32m +/nbdist/[m
[32m +/.nb-gradle/[m
[32m +build/[m
[32m +!**/src/main/**/build/[m
[32m +!**/src/test/**/build/[m
[32m +[m
[32m +### VS Code ###[m
[32m +.vscode/[m
[32m++=======[m
[32m+ # Compiled class file[m
[32m+ *.class[m
[32m+ [m
[32m+ # Log file[m
[32m+ *.log[m
[32m+ [m
[32m+ # BlueJ files[m
[32m+ *.ctxt[m
[32m+ [m
[32m+ # Mobile Tools for Java (J2ME)[m
[32m+ .mtj.tmp/[m
[32m+ [m
[32m+ # Package Files #[m
[32m+ *.jar[m
[32m+ *.war[m
[32m+ *.nar[m
[32m+ *.ear[m
[32m+ *.zip[m
[32m+ *.tar.gz[m
[32m+ *.rar[m
[32m+ [m
[32m+ # virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml[m
[32m+ hs_err_pid*[m
[32m++>>>>>>> c5200aad84844edec01885f874dae37bdd4b0cb9[m
[1mdiff --cc src/main/java/com/feng/constant/UserConstant.java[m
[1mindex 68f8108,0000000..935bdb0[m
mode 100644,000000..100644[m
[1m--- a/src/main/java/com/feng/constant/UserConstant.java[m
[1m+++ b/src/main/java/com/feng/constant/UserConstant.java[m
[36m@@@ -1,5 -1,0 +1,7 @@@[m
[32m +package com.feng.constant;[m
[32m +[m
[31m- public class UserConstant {[m
[32m++public interface UserConstant {[m
[32m +[m
[32m++    //普通用户[m
[32m++     int DEFAULT_ROLE = 0;[m
[32m +}[m
[1mdiff --cc src/main/java/com/feng/controller/UserController.java[m
[1mindex 7079564,0000000..20193fc[m
mode 100644,000000..100644[m
[1m--- a/src/main/java/com/feng/controller/UserController.java[m
[1m+++ b/src/main/java/com/feng/controller/UserController.java[m
[36m@@@ -1,107 -1,0 +1,109 @@@[m
[32m +package com.feng.controller;[m
[32m +import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;[m
[32m +import com.feng.common.BaseResponse;[m
[32m +import com.feng.common.ErrorCode;[m
[32m +import com.feng.common.ResultUtils;[m
[32m +import com.feng.exception.BusinessException;[m
[32m +import com.feng.pojo.User;[m
[32m +import com.feng.pojo.vo.LoginUser;[m
[32m +import com.feng.pojo.vo.RequestUser;[m
[32m +import com.feng.service.UserService;[m
[32m +import com.feng.utils.TokenUtils;[m
[32m +import org.apache.commons.lang3.StringUtils;[m
[32m +import org.springframework.beans.factory.annotation.Autowired;[m
[32m +import org.springframework.web.bind.annotation.*;[m
[32m +[m
[32m +import javax.servlet.http.HttpServletRequest;[m
[32m +import java.util.List;[m
[32m +[m
[32m++import static com.feng.constant.UserConstant.DEFAULT_ROLE;[m
[32m++[m
[32m +@RestController[m
[32m +@CrossOrigin[m
[32m +@RequestMapping("/index")[m
[32m +public class UserController {[m
[32m +    @Autowired[m
[32m +    private UserService userService;[m
[32m +    /**[m
[32m +     * 注册[m
[32m +     * @param requestUser[m
[32m +     * @return[m
[32m +     */[m
[32m +    @PostMapping("/register")[m
[32m +    public BaseResponse register(@RequestBody RequestUser requestUser){[m
[32m +        if (StringUtils.isAnyBlank(requestUser.getUserName(), requestUser.getUserPassword())){[m
[32m +           throw new BusinessException(ErrorCode.NULL_ERROR);[m
[32m +        }[m
[32m +        String userName = requestUser.getUserName();[m
[32m +        String userPassword = requestUser.getUserPassword();[m
[32m +        String checkPassword = requestUser.getCheckPassword();[m
[32m +        User register = userService.register(userName, userPassword, checkPassword);[m
[32m +        String token = TokenUtils.token(register.getId(), register.getUserStatus());[m
[32m +        return ResultUtils.success("注册成功",token);[m
[32m +    }[m
[32m +[m
[32m +    /**[m
[32m +     * 登录[m
[32m +     * @param loginUser[m
[32m +     * @return[m
[32m +     */[m
[32m +    @PostMapping("/login")[m
[32m +    public BaseResponse userLogin(@RequestBody LoginUser loginUser, HttpServletRequest request){[m
[32m +        //是否为管理员[m
[32m +        String header = request.getHeader("HttpServletRequest");[m
[32m +        if (StringUtils.isAnyBlank(loginUser.getUserName(), loginUser.getUserPassword())){[m
[32m +            throw new BusinessException(ErrorCode.NULL_ERROR);[m
[32m +        }[m
[32m +        String userName = loginUser.getUserName();[m
[32m +        String userPassword = loginUser.getUserPassword();[m
[32m +        User user = userService.userLogin(userName, userPassword);[m
[32m +        String token = TokenUtils.token(user.getId(), user.getUserStatus());[m
[32m +        return ResultUtils.success(user,token);[m
[32m +    }[m
[32m +[m
[32m +    /**[m
[32m +     * 查询[m
[32m +     * @param userName[m
[32m +     * @param request[m
[32m +     * @return[m
[32m +     */[m
[32m +    @GetMapping("/query")[m
[32m +    public BaseResponse query( String userName , HttpServletRequest request){[m
[32m +        //是否为管理员[m
[32m +        isAdmin(request);[m
[32m +        QueryWrapper<User> wrapper = new QueryWrapper<>();[m
[32m +        wrapper.like("userName",userName);[m
[32m +        List<User> list = userService.list(wrapper);[m
[32m +        return ResultUtils.success(list);[m
[32m +    }[m
[32m +[m
[32m +    /**[m
[32m +     * 删除[m
[32m +     * @param userName[m
[32m +     * @param request[m
[32m +     * @return[m
[32m +     */[m
[32m +    @DeleteMapping("/delete")[m
[32m +    public BaseResponse delete( String userName , HttpServletRequest request){[m
[32m +        //是否为管理员[m
[32m +        isAdmin(request);[m
[32m +        QueryWrapper<User> wrapper = new QueryWrapper<>();[m
[32m +        wrapper.eq("userName",userName);[m
[32m +        userService.remove(wrapper);[m
[32m +        return ResultUtils.success("删除成功");[m
[32m +    }[m
[32m +[m
[32m +    /**[m
[32m +     * 是否为管理员[m
[32m +     * @param request[m
[32m +     */[m
[32m +    public void isAdmin(HttpServletRequest request){[m
[32m +        String header = request.getHeader("Authorization");[m
[32m +        String substring = header.substring(7);[m
[32m +        Integer verify = TokenUtils.verify(substring);[m
[31m-         if (verify==0){[m
[32m++        if (verify==DEFAULT_ROLE){[m
[32m +            throw  new BusinessException(ErrorCode.NOT_AUTH,"不是管理员无法查看");[m
[32m +        }[m
[32m +    }[m
[32m +}[m
[32m +[m
